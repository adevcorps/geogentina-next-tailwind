@tailwind base;
@tailwind components;
@tailwind utilities;

html {
    scroll-behavior: smooth;
    /* font-family: 'Raleway', sans-serif; */
    /* font-family: ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto, Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji; */
    font-family: "Space Grotesk";
}

.custom-img {

    background-image: url("../assets/hero.png");
}

.bg-geo-gree{
    --tw-bg-opacity: 1;
    background-color: rgb(192 255 13 / var(--tw-bg-opacity));
    color: black;
}

.text-geo-green{
    --tw-text-opacity: 1;
    color: white;
}
.text-geo-green:hover{
    --tw-text-opacity: 1;
    color: rgb(192 255 13/var(--tw-text-opacity));

}

.text-geo-green-lg {
    --tw-text-opacity: 1;
    color: rgb(192 255 13/var(--tw-text-opacity));
}

.transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(.4,0,.2,1);
    transition-duration: .15s;
}

.bg-geo-dark {
    --tw-bg-opacity: 1;
    background-color: rgb(12 22 33 / var(--tw-bg-opacity));
}

.border-bottom-opacity-5{
    border-bottom: solid #282b61 0.5px;
}

.text-geo-blue {
    --tw-text-opacity: 1;
    color: rgb(66 130 255 / var(--tw-text-opacity));
}

.text-slate-500{
    --tw-text-opacity: 1;
    color: rgb(100 116 139 / var(--tw-text-opacity));
}

.bg-geo-dark-2 {
    --tw-bg-opacity: 1;
    background-color: rgb(10 20 30 / var(--tw-bg-opacity));
}

.prose-headings\:text-white :is(:where(h1,h2,h3,h4,h5,h6,th):not(:where([class~=not-prose],[class~=not-prose] *))) {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
}


.prose :where(.prose>:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
    margin-top: 0;
}
.prose :where(h1):not(:where([class~=not-prose],[class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: .8888889em;
    line-height: 1.1111111;
}
.prose :where(p):not(:where([class~=not-prose],[class~=not-prose] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
}
.prose :where(h2):not(:where([class~=not-prose],[class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
}

.prose :where(ul):not(:where([class~=not-prose],[class~=not-prose] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
}

.prose :where(li):not(:where([class~=not-prose],[class~=not-prose] *)) {
    margin-top: .5em;
    margin-bottom: .5em;
}

.prose :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *)) {
    padding-left: .375em;
}

menu, ol, ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

.prose :where(a):not(:where([class~=not-prose],[class~=not-prose] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
}
.prose :where(h3):not(:where([class~=not-prose],[class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: .6em;
    line-height: 1.6;
}

.prose :where(table):not(:where([class~=not-prose],[class~=not-prose] *)) {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: .875em;
    line-height: 1.7142857;
}

tr {
    display: table-row;
    vertical-align: inherit;
    unicode-bidi: isolate;
    border-color: inherit;
}

.prose :where(thead th:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
    padding-left: 0;
}

tbody {
    display: table-row-group;
    vertical-align: middle;
    unicode-bidi: isolate;
    border-color: inherit;
}

.prose :where(tbody tr):not(:where([class~=not-prose],[class~=not-prose] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(thead tr):not(:where([class~=not-prose],[class~=not-prose] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody td:first-child,tfoot td:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
    padding-left: 0;
}

.prose :where(tbody td,tfoot td):not(:where([class~=not-prose],[class~=not-prose] *)) {
    padding: .5714286em;
}
.prose :where(tbody td):not(:where([class~=not-prose],[class~=not-prose] *)) {
    vertical-align: baseline;
}

p {
    display: block;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    unicode-bidi: isolate;
}

.prose :where(hr+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
    margin-top: 0;
}
.prose :where(hr):not(:where([class~=not-prose],[class~=not-prose] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
}